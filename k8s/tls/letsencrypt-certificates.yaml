---
# Let's Encrypt Cluster Issuer for cert-manager (HTTP-01 Challenge)
# This uses HTTP-01 challenge which is simpler and doesn't require DNS API access
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Let's Encrypt production server (rate limited but trusted certificates)
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@nainika.store
    privateKeySecretRef:
      name: letsencrypt-prod-account-key
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux

---
# Let's Encrypt Staging Issuer (for testing - no rate limits)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # Let's Encrypt staging server (for testing, not trusted but no rate limits)
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: devops@nainika.store
    privateKeySecretRef:
      name: letsencrypt-staging-account-key
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux

---
# Certificate for Grafana (using HTTP-01 challenge)
# Grafana is the only monitoring component with external access
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-nainika-store-cert
  namespace: monitoring
spec:
  secretName: grafana-nainika-store-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - grafana.nainika.store

---
# Certificate for Production frontend
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prod-nainika-store-cert
  namespace: prod
spec:
  secretName: prod-nainika-store-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - prod.nainika.store

---
# Certificate for Staging frontend
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: stage-nainika-store-cert
  namespace: stage
spec:
  secretName: stage-nainika-store-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - stage.nainika.store